{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from '../../routes';\n\nvar CampaignShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CampaignShow).apply(this, arguments));\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: 'Address of Manager',\n        description: 'The manager created this campaign and can create requests to withdraw money.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'You must contribute at least this much wei to become an approver'\n      }, {\n        header: requestsCount,\n        meta: 'Number of Requests',\n        description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n      }, {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description: 'Number of people who have already donated to this campaign.'\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (in ether)',\n        description: 'The balance is how much money this campaign has left to spend.'\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 10\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(ContributeForm, {\n        address: this.props.address\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/campaigns/\".concat(this.props.address, \"/requests/\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"View Requests\")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                console.log(summary);\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/walton/Desktop/Ethereum Developmet/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","ContributeForm","Link","CampaignShow","props","balance","manager","minimumContribution","requestsCount","approversCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from '../../routes'\n\nclass CampaignShow extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n\n        const summary = await campaign.methods.getSummary().call();\n\n        console.log(summary);\n\n        return {\n            address: props.query.address,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        }\n    }\n\n    renderCards() {\n        const {\n            balance,\n            manager,\n            minimumContribution,\n            requestsCount,\n            approversCount\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                description: 'The manager created this campaign and can create requests to withdraw money.',\n                style: { overflowWrap: 'break-word'}\n            },\n            {\n                header: minimumContribution,\n                meta: 'Minimum Contribution (wei)',\n                description: 'You must contribute at least this much wei to become an approver'\n            },\n            {\n                header: requestsCount,\n                meta: 'Number of Requests',\n                description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n            },\n            {\n                header: approversCount,\n                meta: 'Number of Approvers',\n                description: 'Number of people who have already donated to this campaign.'\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (in ether)',\n                description: 'The balance is how much money this campaign has left to spend.'\n            }\n        ];\n\n        return <Card.Group items={items}/>\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h3>Campaign Show</h3>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={10}>\n                            {this.renderCards()}\n                        </Grid.Column>\n                        <Grid.Column width={6}>\n                            <ContributeForm address={this.props.address}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Link route={`/campaigns/${this.props.address}/requests/`}>\n                                <a>\n                                    <Button primary>View Requests</Button>\n                                </a>\n                            </Link>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}