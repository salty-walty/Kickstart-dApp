{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from \"../ethereum/web3\";\nimport { Router } from '../routes';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\"\n    }), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Contribute\")));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/walton/Desktop/Ethereum Developmet/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","setState","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD2B;;AAAA,sCAOxB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAGT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAzB;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI;AACA,cAAMO,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAF8B,SAAnC,CAAN;AAKAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,cAAa,KAAKb,KAAL,CAAWC,OAAQ,EAArD;AACH,OARD,CAQE,OAAOa,GAAP,EAAY;AACV,aAAKZ,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAEmB,GAAG,CAACC;AAApB,SAAd;AACH;;AAED,WAAKb,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAE,KAAV;AAAiBF,QAAAA,KAAK,EAAE;AAAxB,OAAd;AACH,KA3BkC;AAAA;;AA+BnCsB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWjB;AAAnD,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,KADtB;AAEI,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd,CAFvB;AAGI,MAAA,KAAK,EAAE,OAHX;AAII,MAAA,aAAa,EAAE;AAJnB,MAFJ,EASI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAE,OAAvB;AAAgC,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAApD,MATJ,EAUI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB;AAApC,oBAVJ,CADJ,CADJ;AAkBH;;AAlDkC;;AAqDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react'\nimport Campaign from '../ethereum/campaign'\nimport web3 from \"../ethereum/web3\";\nimport { Router } from '../routes'\n\nclass ContributeForm extends Component {\n    state = {\n        value: '',\n        errorMessage: '',\n        loading: false\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const campaign = Campaign(this.props.address);\n\n        this.setState({ loading: true})\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, 'ether')\n            });\n\n            Router.replaceRoute(`/campaigns/${this.props.address}`);\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n        }\n\n        this.setState({loading: false, value: '' });\n    }\n\n\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                <Form.Field>\n                    <label>Amount to Contribute</label>\n                    <Input\n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                        label={\"ether\"}\n                        labelPosition={\"right\"}\n                    />\n\n                    <Message error header={\"Oops!\"} content={this.state.errorMessage}/>\n                    <Button primary loading={this.state.loading}>\n                        Contribute\n                    </Button>\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}