{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create requests to withdraw money.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who have already donated to this campaign.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (in ether)',\n      description: 'The balance is how much money this campaign has left to spend.'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), this.renderCards());\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/walton/Desktop/Ethereum Developmet/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Layout","Campaign","web3","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","console","log","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACjC,eAAaM,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAMC,QAAQ,GAAGL,QAAQ,CAACI,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AAEA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,WAAO;AACHM,MAAAA,mBAAmB,EAAEN,OAAO,CAAC,CAAD,CADzB;AAEHO,MAAAA,OAAO,EAAEP,OAAO,CAAC,CAAD,CAFb;AAGHQ,MAAAA,aAAa,EAAER,OAAO,CAAC,CAAD,CAHnB;AAIHS,MAAAA,cAAc,EAAET,OAAO,CAAC,CAAD,CAJpB;AAKHU,MAAAA,OAAO,EAAEV,OAAO,CAAC,CAAD;AALb,KAAP;AAOH;;AAEDW,EAAAA,WAAW,GAAG;AACV,UAAM;AACFJ,MAAAA,OADE;AAEFG,MAAAA,OAFE;AAGFJ,MAAAA,mBAHE;AAIFE,MAAAA,aAJE;AAKFC,MAAAA;AALE,QAMF,KAAKb,KANT;AAQA,UAAMgB,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAEH,OADZ;AAEII,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE,8EAHjB;AAIIC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAJX,KADU,EAOV;AACIJ,MAAAA,MAAM,EAAEP,mBADZ;AAEIQ,MAAAA,IAAI,EAAE,4BAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAPU,EAYV;AACIF,MAAAA,MAAM,EAAEL,aADZ;AAEIM,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAZU,EAiBV;AACIF,MAAAA,MAAM,EAAEJ,cADZ;AAEIK,MAAAA,IAAI,EAAE,qBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAjBU,EAsBV;AACIF,MAAAA,MAAM,EAAEpB,IAAI,CAACyB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADZ;AAEIO,MAAAA,IAAI,EAAE,6BAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KAtBU,CAAd;AA6BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,kCADJ,EAEK,KAAKT,WAAL,EAFL,CADJ;AAMH;;AAjEgC;;AAoErC,eAAejB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Card} from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3'\n\nclass CampaignShow extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n\n        const summary = await campaign.methods.getSummary().call();\n\n        console.log(summary);\n\n        return {\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        }\n    }\n\n    renderCards() {\n        const {\n            balance,\n            manager,\n            minimumContribution,\n            requestsCount,\n            approversCount\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                description: 'The manager created this campaign and can create requests to withdraw money.',\n                style: { overflowWrap: 'break-word'}\n            },\n            {\n                header: minimumContribution,\n                meta: 'Minimum Contribution (wei)',\n                description: 'You must contribute at least this much wei to become an approver'\n            },\n            {\n                header: requestsCount,\n                meta: 'Number of Requests',\n                description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n            },\n            {\n                header: approversCount,\n                meta: 'Number of Approvers',\n                description: 'Number of people who have already donated to this campaign.'\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (in ether)',\n                description: 'The balance is how much money this campaign has left to spend.'\n            }\n        ];\n\n        return <Card.Group items={items}/>\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h3>Campaign Show</h3>\n                {this.renderCards()}\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}