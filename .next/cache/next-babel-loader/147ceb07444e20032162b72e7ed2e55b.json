{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from \"../ethereum/web3\";\nimport { Router } from '../routes';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {}\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\"\n    }), __jsx(Button, {\n      primary: true\n    }, \"Contribute\")));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/walton/Desktop/Ethereum Developmet/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","event","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","render","onSubmit","setState","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AACJS,MAAAA,KAAK,EAAE;AADH,KAD2B;;AAAA,sCAKxB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAGP,QAAQ,CAAC,KAAKQ,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCN,UAAAA,KAAK,EAAEH,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWf,KAA5B,EAAmC,OAAnC;AAF8B,SAAnC,CAAN;AAKAF,QAAAA,MAAM,CAACkB,YAAP,CAAqB,cAAa,KAAKZ,KAAL,CAAWC,OAAQ,EAArD;AACH,OARD,CAQE,OAAOY,GAAP,EAAY,CAEb;AACJ,KArBkC;AAAA;;AAyBnCC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWf,KADtB;AAEI,MAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKmB,QAAL,CAAc;AAAEpB,QAAAA,KAAK,EAAEC,KAAK,CAACoB,MAAN,CAAarB;AAAtB,OAAd,CAFvB;AAGI,MAAA,KAAK,EAAE,OAHX;AAII,MAAA,aAAa,EAAE;AAJnB,MAFJ,EASI,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,oBATJ,CADJ,CADJ;AAiBH;;AA3CkC;;AA8CvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react'\nimport Campaign from '../ethereum/campaign'\nimport web3 from \"../ethereum/web3\";\nimport { Router } from '../routes'\n\nclass ContributeForm extends Component {\n    state = {\n        value: ''\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const campaign = Campaign(this.props.address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, 'ether')\n            });\n\n            Router.replaceRoute(`/campaigns/${this.props.address}`)\n        } catch (err) {\n\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Form.Field>\n                    <label>Amount to Contribute</label>\n                    <Input\n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                        label={\"ether\"}\n                        labelPosition={\"right\"}\n                    />\n\n                    <Button primary>\n                        Contribute\n                    </Button>\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}