{"version":3,"file":"static/webpack/static/development/pages/campaigns/show.js.0486c96344f72d53bfcb.hot-update.js","sources":["webpack:///./components/ContributeForm.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/campaigns/show.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react'\nimport Campaign from '../ethereum/campaign'\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n    state = {\n        value: ''\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const campaign = Campaign(this.props.address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, 'ether')\n            });\n        } catch (err) {\n\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Form.Field>\n                    <label>Amount to Contribute</label>\n                    <Input\n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                        label={\"ether\"}\n                        labelPosition={\"right\"}\n                    />\n\n                    <Button primary>\n                        Contribute\n                    </Button>\n                </Form.Field>\n            </Form>\n        )\n    }\n}\n\nexport default ContributeForm;","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from 'react';\nimport {Card, Grid } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from \"../../components/ContributeForm\";\n\nclass CampaignShow extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n\n        const summary = await campaign.methods.getSummary().call();\n\n        console.log(summary);\n\n        return {\n            address: props.query.address,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n        }\n    }\n\n    renderCards() {\n        const {\n            balance,\n            manager,\n            minimumContribution,\n            requestsCount,\n            approversCount\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                description: 'The manager created this campaign and can create requests to withdraw money.',\n                style: { overflowWrap: 'break-word'}\n            },\n            {\n                header: minimumContribution,\n                meta: 'Minimum Contribution (wei)',\n                description: 'You must contribute at least this much wei to become an approver'\n            },\n            {\n                header: requestsCount,\n                meta: 'Number of Requests',\n                description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n            },\n            {\n                header: approversCount,\n                meta: 'Number of Approvers',\n                description: 'Number of people who have already donated to this campaign.'\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (in ether)',\n                description: 'The balance is how much money this campaign has left to spend.'\n            }\n        ];\n\n        return <Card.Group items={items}/>\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h3>Campaign Show</h3>\n                <Grid>\n                    <Grid.Column width={10}>\n                        {this.renderCards()}\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <ContributeForm address={this.props.address}/>\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignShow;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAHA;AAAA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AAMA;;;;AAzCA;AACA;AA2CA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AACA;;;AAEA;AACA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AAKA;;;;;;AAxEA;;;;;;AACA;;AAEA;AACA;;AADA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;;;;;;;;;;;;;AATA;AACA;AA2EA;;;;A","sourceRoot":""}